                    МІНІСТЕРСТВО ОСВІТИ І НАУКИ УКРАЇНИ
   ХАРКІВСЬКИЙ НАЦІОНАЛЬНИЙ УНІВЕРСИТЕТ РАДІОЕЛЕКТРОНІКИ



                           Кафедра Програмної інженерії




                                        Звіт
                              з лабораторної роботи №2
                    з дисципліни: «Скриптові мови програмування»
з теми: «Розробка консольного застосунку «Продовольчий магазин «Весна»» на
                                       PHP»




Виконала:                                                             Перевірив:
ст. гр. ПЗПІ-23-1                                  Старший викладач кафедри ПІ
Третьякова Л. С.                                                   Сокорчук І. П.




                                   Харків – 2025
                                                                              2
    2 РОЗРОБКА КОНСОЛЬНОГО ЗАСТОСУНКУ «ПРОДОВОЛЬЧИЙ
                            МАГАЗИН «ВЕСНА»» НА PHP

     2.1 Історія змін

№ Дата                 Версія звіту   Опис змін та виправлень
1 25.04.2025           0.1            Створено звіт

     2.2 Мета роботи

     Потрібно створити консольний застосунок «Продовольчий магазин «Весна»».
Ім’я скрипта:      /імʼя_облікового_запису-task3.php Наприклад:     /pzpi-27-15-
shukhevych-roman-task3.php Програма після запуску повинна вивести на термінал
перелік можливих дій:

     ################################
     # ПРОДОВОЛЬЧИЙ МАГАЗИН "ВЕСНА" #
     ################################
     1 Вибрати товари
     2 Отримати підсумковий рахунок
     3 Налаштувати свій профіль
     0 Вийти з програми
     Введіть команду: _


     Далі програма очікує введення значення з клавіатури. Якщо користувач
вводить число, якого немає в списку можливих команд, необхідно вивести
повідомлення про помилку і запропонувати користувачу ввести інше число:

     Введіть команду: 4
     ПОМИЛКА! Введіть правильну команду
     1 Вибрати товари
     2 Отримати підсумковий рахунок
     3 Налаштувати свій профіль
     0 Вийти з програми
     Введіть команду: _


     Щоб розпочати купувати товари, необхідно ввести число «1», після чого
користувач повинен потрапити в режим закупівлі товарів. На екрані має з’явитися
перелік продуктів, де кожен рядок складається з номера, назви товару і його
вартості, наприклад:
                                                                                 3
     Введіть команду: 1
     № НАЗВА                     ЦІНА
     1 Молоко пастеризоване      12
     2 Хліб чорний               9
     3 Сир білий                 21
     4 Сметана 20%               25
     5 Кефір 1%                  19
     6 Вода газована             18
     7 Печиво "Весна"            14
        -----------
     0 ПОВЕРНУТИСЯ
     Виберіть товар: _


     Щоб купити товар, необхідно ввести його номер. Після успішної перевірки на
існування номера товару в списку, програма має попросити ввести кількість товару:

     Виберіть товар: 2
     Вибрано: Хліб чорний
     Введіть кількість, штук: 1
     У КОШИКУ:
     НАЗВА        КІЛЬКІСТЬ
     Хліб чорний 1


     Якщо номер товару і його кількість (менше 100 шт.) були вказані коректно, то
товар додається в кошик. Якщо вказано кількість «0», то товар видаляється з кошика:

     Виберіть товар: 2
     Вибрано: Хліб чорний
     Введіть кількість, штук: 0
     ВИДАЛЯЮ З КОШИКА
     КОШИК ПОРОЖНІЙ


     Далі знову відображається перелік товарів і пропонується купити наступний
товар. Якщо номер товару вказано неправильно, виводиться сповіщення про
помилку, нову виводиться перелік товарів:

     №  НАЗВА                 ЦІНА
     1  Молоко пастеризоване 12
     2  Хліб чорний           9
     3  Сир білий             21
     4  Сметана 20%           25
     5  Кефір 1%              19
     6  Вода газована         18
     7  Печиво "Весна"        14
        -----------
     0 ПОВЕРНУТИСЯ
     Виберіть товар: 8
     ПОМИЛКА! ВКАЗАНО НЕПРАВИЛЬНИЙ НОМЕР ТОВАРУ
                                                                                4
      Щоб завершити купувати товари і перейти до попереднього меню, необхідно
ввести з клавіатури цифру «0». Щоб отримати підсумковий рахунок, потрібно
ввести число «2». Рахунок має містити таку інформацію: №, назва, ціна товару,
кількість товару, вартість товару. У кінці чека має бути:

      РАЗОМ ДО CПЛАТИ: сума_за_всі_товари


      Наприклад:

      Введіть команду: 2
      № НАЗВА                     ЦІНА   КІЛЬКІСТЬ   ВАРТІСТЬ
      1 Печиво "Весна"            14     1           14
      2 Молоко пастеризоване      12     2           24
      3 Сметана 20%               25     1           25
      4 Хліб чорний               9      1           9
      РАЗОМ ДО CПЛАТИ: 72


      Щоб встановити свій профіль потрібно, ввести число «3», після чого програма
попросить ввести ваше ім’я та ваш вік:

      Ваше імʼя: _
      Ваш вік: _


      Імʼя користувача не може бути порожнім і повинно містити хоча б одну літеру.
Користувач не може бути молодшим 7-ми або старшим 150-ти років Щоб завершити
роботу та вийти з програми, потрібно ввести число «0». У програмі потрібно
перевіряти інформацію, яку вводить користувач, а саме:
      –   обраний пункт меню існує;
      –   обраний товар існує;
      –   введена кількість товару більша нуля;
      –   імʼя користувача містить хча б одну літеру;
      –   вік користувача становить від 7-ми до 150-ти років.

      2.3 Хід роботи

      2.3.1 Загальний опис

      Було розроблено програму, яка складається з основного циклу та набору
допоміжних функцій. Програма працює в консольному режимі та взаємодіє з
                                                                                  5
користувачем через текстовий інтерфейс. Також було організовано збереження
даних між сеансами роботи програми. Список товарів зберігається у файлі
products.csv з полями ID, назва та ціна. Кошик користувача зберігається у файлі
cart.csv з полями ID товару та кількість, він автоматично зберігається після кожного
додавання товару та при виході з програми.

      2.3.2 Функції читання з файлів

      Було реалізовано функцію readProductsFromFile() для читання списку товарів
з CSV файлу. Вона отримує ім’я файлу як параметр, перевіряє його існування та
читає дані построково. Перший рядок файлу пропускається як заголовок. Кожен
рядок розбирається на три поля: ID товару, назву та ціну. Дані зберігаються в
асоціативному масиві, де ключем є ID товару. Функція readCartFromFile() працює
схожим чином, а саме: перевіряє існування файлу, пропускає заголовок та читає
кожен рядок, формуючи асоціативний масив де ключ - це ID товару, а значення -
кількість.

      2.3.3 Функції записування у файли

      Було створено функції для запису списку товарів у CSV файл. Наприклад,
функція writeProductsToFile() отримує ім’я файлу та масив товарів. Спочатку
записується заголовок з назвами колонок, потім кожен товар записується як
окремий рядок з ID, назвою та ціною. За таким же принципом працює функція
writeCartToFile().

      2.3.4 Функція printMenu()

      Було реалізовано функцію для виведення головного меню програми. Вона
отримує параметр isFirst, який визначає чи потрібно виводити заголовок магазину
(відповідно до завдання це необхідно зробити лише перший раз). Якщо isFirst
дорівнює true, то виводиться заголовок з назвою магазина. Далі завжди виводяться
чотири пункти меню з номерами команд.
                                                                              6
     2.3.5 Функція padRight()

     Було створено допоміжну функцію для форматування тексту. Вона отримує
рядок та бажану довжину, обчислює кількість пробілів які потрібно додати справа
та повертає відформатований рядок. Використовується функція mb_strlen для
коректної роботи з юнікод символами.

     2.3.6 Функція printProducts()

     Було реалізовано функцію для виведення списку всіх товарів у табличному
форматі. Вона виводить заголовок таблиці з колонками номер, назва та ціна. Потім
проходить по всьому масиву товарів та виводить кожен товар в окремому рядку з
правильним форматуванням. В кінці додається розділювач та опція повернення до
головного меню.

     2.3.7 Функція buyProducts()

     Було створено основну функцію для процесу покупки товарів. Функція
працює в циклі, виводить список товарів та очікує введення номера товару
від користувача. Якщо введено 0, функція завершується. Якщо товар не існує,
виводиться повідомлення про помилку. Для існуючого товару запитується кількість
та викликається функція додавання до кошика. Після кожного додавання кошик
зберігається у файл та виводиться його поточний стан.

     2.3.8 Функція addItemToCart()

     Було реалізовано функцію для додавання товару до кошика. Функція отримує
ID товару та кількість. Якщо кількість дорівнює 0 та товар вже є в кошику,
товар видаляється з повідомленням про видалення. Якщо кількість більше 0, товар
додається або оновлюється в кошику.

     2.3.9 Функція seeCart()

     Було створено функцію для відображення поточного стану кошика. Якщо
кошик порожній, виводиться відповідне повідомлення. Якщо в кошику є товари,
виводиться таблиця з назвами товарів та їх кількістю з правильним форматуванням.
                                                                                  7
     2.3.10 Функція checkout()

     Було реалізовано функцію для формування підсумкового рахунку. Функція
виводить заголовок чеку з колонками номер, назва, ціна, кількість та вартість. Потім
проходить по всьому кошику, для кожного товару обчислює загальну вартість та
додає до підсумку. Кожен рядок чеку форматується з правильним вирівнюванням.
В кінці виводиться загальна сума до сплати.

     2.3.11 Функція updateProfile()

     Було створено функцію для налаштування профілю користувача. Функція
працює в двох циклах - спочатку запитує ім’я користувача та перевіряє його на
наявність хоча б однієї літери використовуючи регулярний вираз. Потім запитує
вік та перевіряє що це число від 7 до 150. Після успішного введення виводиться
підтвердження з введеними даними.

     2.4 Висновки

     У    ході   виконання    лабораторної    роботи   я   навчилася    створювати
повнофункціональні консольні застосунки на PHP із файловим збереженням даних
та валідацією даних, введених користувачем.
                                                                           8
                           ДОДАТОК А
            Відеозапис презентації лабораторної роботи

Відеозапис результатів лабораторної роботи: https://youtu.be/l7wkYDM3qjM
Хронологічний опис відеозапису:
00:00 – Вступ
00:16 – Про зберігання даних
01:01 – Основний цикл програми
02:37 – Функції роботи з файлами
03:48 – Функція виводу меню
04:06 – Функція форматування виводу
04:33 – Функція виводу товарів
04:55 – Функція покупки товарів
05:44 – Функція додавання товару до кошику
06:09 – Функція перегляду кошику
06:31 – Функція отримання чеку
07:14 – Функція оновлення профілю користувача
08:13 – Тестування програми
                                                                                         9
                                    ДОДАТОК Б
                                   Програмний код

      Б.1 Скрипт із реалізацією програми
      GitHub     репозиторій:     https://github.com/NureTretiakovaLiliia/smp-pzpi-23-1-tretiakova-liliia/blob/main/Lab2/smp-pzpi-23-1-tretiakova-liliia-lab2/smp-pzpi-23-1-tretiakova-liliia-lab2-code.php

     1 <?php
     2
     3 function readProductsFromFile(string $filename): array {
     4     $products = [];
     5     if (!file_exists($filename)) {
     6         return $products;
     7     }
     8
     9     $file = fopen($filename, 'r');
     10     fgetcsv($file);
     11
     12     while (($data = fgetcsv($file)) !== false) {
     13         $id = (int)$data[0];
     14         $name = $data[1];
     15         $price = (int)$data[2];
     16         $products[$id] = ['name' => $name, 'price' => $price];
     17     }
     18
     19     fclose($file);
     20     return $products;
     21 }
     22
     23 function writeProductsToFile(string $filename, array $products):
     void {
     24     $file = fopen($filename, 'w');
     25
     26     fputcsv($file, ['id', 'name', 'price']);
     27
     28     foreach ($products as $id => $product) {
     29         fputcsv($file, [$id, $product['name'],
     $product['price']]);
     30     }
     31
     32     fclose($file);
     33 }
     34
     35 function writeCartToFile(string $filename, array $cart): void {
     36     $file = fopen($filename, 'w');
     37     fputcsv($file, ['id', 'amount']);
     38     foreach ($cart as $id => $amount) {
     39         fputcsv($file, [$id, $amount]);
     40     }
     41     fclose($file);
     42 }
     43
                                                                10
     44 function readCartFromFile(string $filename): array {
     45     $cart = [];
     46     if (!file_exists($filename)) {
     47         return $cart;
     48     }
     49
     50     $file = fopen($filename, 'r');
     51     fgetcsv($file);
     52
     53     while (($data = fgetcsv($file)) !== false) {
     54         $id = (int)$data[0];
     55         $amount = (int)$data[1];
     56         $cart[$id] = $amount;
     57     }
     58
     59     fclose($file);
     60     return $cart;
     61 }
     62
     63
     64 function printMenu($isFirst) {
     65     if ($isFirst == true) {
     66         echo "\n################################\n";
     67         echo "# ПРОДОВОЛЬЧИЙ МАГАЗИН \"ВЕСНА\" #\n";
     68         echo "################################\n";
     69     }
     70
     71     echo "1 Вибрати товари\n";
     72     echo "2 Отримати підсумковий рахунок\n";
     73     echo "3 Налаштувати свій профіль\n";
     74     echo "0 Вийти з програми\n";
     75 }
     76
     77
     78 function padRight($string, $length) {
     79     $padLength = $length - mb_strlen($string);
     80     return $string . str_repeat(' ', max(0, $padLength));
     81 }
     82
     83
     84 function printProducts() {
     85     global $products;
     86
     87     echo "№ НАЗВА                    ЦІНА\n";
     88
     89     foreach ($products as $id => $product) {
     90         $numStr = str_pad($id, 3, ' ', STR_PAD_RIGHT);
     91         $nameStr = padRight($product['name'], 24);
     92         $priceStr = str_pad($product['price'], 3, ' ',
     STR_PAD_LEFT);
     93         echo "$numStr$nameStr$priceStr\n";
     94     }
     95     echo "   -----------\n";
     96     echo "0 ПОВЕРНУТИСЯ\n";
     97 }
     98
     99
     100 function buyProducts() {
                                                                         11
     101     global $products;
     102     global $cart;
     103     if (!isset($cart)) {
     104         $cart = [];
     105     }
     106
     107     while (true) {
     108         printProducts();
     109
     110         $id = readline("Виберіть товар: ");
     111
     112         if ($id == 0) {
     113              break;
     114         } else if (!array_key_exists($id, $products)) {
     115              echo "ПОМИЛКА! ВКАЗАНО НЕПРАВИЛЬНИЙ НОМЕР ТОВАРУ\n";
     116         } else {
     117              echo "Вибрано: " . $products[$id]['name'] . "\n";
     118
     119              $amount = readline("Введіть кількість, штук: ");
     120
     121              if (!is_numeric($amount) || $amount < 0 || $amount >=
     100) {
     122                  echo "ПОМИЛКА! Кількість має бути від 0 до 99\n";
     123                  continue;
     124              }
     125
     126              addItemToCart($id, $amount);
     127              writeCartToFile("cart.csv", $cart);
     128
     129              seeCart();
     130         }
     131     }
     132 }
     133
     134
     135 function addItemToCart($itemId, $amount) {
     136     global $cart;
     137
     138     if ($amount == 0 && isset($cart[$itemId])) {
     139         echo "ВИДАЛЯЮ З КОШИКА\n";
     140         unset($cart[$itemId]);
     141     } else if ($amount > 0) {
     142         $cart[$itemId] = $amount;
     143     }
     144 }
     145
     146
     147 function seeCart() {
     148     global $cart;
     149     global $products;
     150
     151     if (empty($cart)) {
     152         echo "КОШИК ПОРОЖНІЙ\n";
     153     } else {
     154         echo "У КОШИКУ:\n";
     155         echo "НАЗВА                    КІЛЬКІСТЬ\n";
     156         foreach ($cart as $itemId => $amount) {
     157              $nameStr = padRight($products[$itemId]['name'], 24);
                                                                        12
     158             echo $nameStr . $amount . "\n";
     159         }
     160     }
     161 }
     162
     163
     164 function checkout() {
     165     global $cart;
     166     global $products;
     167
     168     $total = 0;
     169
     170     echo "№ НАЗВА                  ЦІНА КІЛЬКІСТЬ ВАРТІСТЬ\n";
     171     $counter = 1;
     172     foreach ($cart as $itemId => $amount) {
     173         $price = $products[$itemId]['price'];
     174         $name = $products[$itemId]['name'];
     175         $sum = $amount * $price;
     176         $total += $sum;
     177
     178         $nameStr = padRight($name, 22);
     179         $counterStr = str_pad($counter, 3, ' ', STR_PAD_RIGHT);
     180         $priceStr = str_pad($price, 5, ' ', STR_PAD_LEFT);
     181         $amountStr = str_pad($amount, 8, ' ', STR_PAD_LEFT);
     182         $sumStr = str_pad($sum, 8, ' ', STR_PAD_LEFT);
     183         echo "$counterStr$nameStr$priceStr$amountStr$sumStr\n";
     184         $counter++;
     185     }
     186     echo "РАЗОМ ДО CПЛАТИ: " . $total . "\n\n";
     187 }
     188
     189 function updateProfile() {
     190     while (true) {
     191         $name = readLine("Ваше імʼя: ");
     192         if (preg_match('/[А-ЩЬЮЯЄІЇҐа-щьюяєіїґa-zA-Z]/u', $name))
     {
     193             $profile['name'] = $name;
     194             break;
     195         } else {
     196             echo "ПОМИЛКА! Імʼя повинно містити хоча б одну
     літеру\n";
     197         }
     198     }
     199
     200     while (true) {
     201         $age = readLine("Ваш вік: ");
     202         if (is_numeric($age) && $age >= 7 && $age <= 150) {
     203             $profile['age'] = (int)$age;
     204             break;
     205         } else {
     206             echo "ПОМИЛКА! Вік повинен бути від 7 до 150\n";
     207         }
     208     }
     209
     210     echo "Ваше ім'я: " . $profile['name'] . "\n";
     211     echo "Ваш вік: " . $profile['age'] . "\n\n";
     212 }
     213
                                                                     13
     214
     215 $products = readProductsFromFile("products.csv");
     216
     217 $profile = [
     218     "name" => "",
     219     "age" => ""
     220 ];
     221
     222 $cart = readCartFromFile("cart.csv");
     223
     224 $isFirst = true;
     225
     226 while (true) {
     227     printMenu($isFirst);
     228     $isFirst = false;
     229
     230     $choice = readline("Введіть команду: ");
     231
     232     switch ($choice) {
     233         case 0:
     234              writeCartToFile("cart.csv", $cart);
     235              exit();
     236              break;
     237         case 1:
     238              buyProducts();
     239              break;
     240         case 2:
     241              checkout();
     242              break;
     243         case 3:
     244              updateProfile();
     245              break;
     246         default:
     247              echo "ПОМИЛКА! Введіть правильну команду\n";
     248              break;
     249     }
     250
     251 }
     
